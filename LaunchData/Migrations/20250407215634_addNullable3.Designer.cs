// <auto-generated />
using System;
using LaunchData.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LaunchData.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250407215634_addNullable3")]
    partial class addNullable3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LaunchData.Models.Core", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CoreId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "core");

                    b.Property<int?>("Flight")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "flight");

                    b.Property<bool?>("Gridfins")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "gridfins");

                    b.Property<bool?>("LandingAttempt")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "landing_attempt");

                    b.Property<bool?>("LandingSuccess")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "landing_success");

                    b.Property<string>("LandingType")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "landing_type");

                    b.Property<string>("Landpad")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "landpad");

                    b.Property<string>("LaunchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LaunchModelId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("Legs")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "legs");

                    b.Property<bool?>("Reused")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "reused");

                    b.HasKey("Id");

                    b.HasIndex("LaunchModelId");

                    b.ToTable("Cores");

                    b.HasAnnotation("Relational:JsonPropertyName", "cores");
                });

            modelBuilder.Entity("LaunchData.Models.CrewMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Crew")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LaunchModelId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LaunchModelId");

                    b.ToTable("CrewMember");

                    b.HasAnnotation("Relational:JsonPropertyName", "crew");
                });

            modelBuilder.Entity("LaunchData.Models.Failure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Altitude")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "altitude");

                    b.Property<string>("LaunchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LaunchModelId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "reason");

                    b.Property<int?>("Time")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "time");

                    b.HasKey("Id");

                    b.HasIndex("LaunchModelId");

                    b.ToTable("Failures");

                    b.HasAnnotation("Relational:JsonPropertyName", "failures");
                });

            modelBuilder.Entity("LaunchData.Models.Fairings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Recovered")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "recovered");

                    b.Property<bool?>("RecoveryAttempt")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "recovery_attempt");

                    b.Property<bool?>("Reused")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "reused");

                    b.PrimitiveCollection<string>("Ships")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ships");

                    b.HasKey("Id");

                    b.ToTable("Fairings");

                    b.HasAnnotation("Relational:JsonPropertyName", "fairings");
                });

            modelBuilder.Entity("LaunchData.Models.Flickr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.PrimitiveCollection<string>("Original")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "original");

                    b.PrimitiveCollection<string>("Small")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "small");

                    b.HasKey("Id");

                    b.ToTable("Flickrs");

                    b.HasAnnotation("Relational:JsonPropertyName", "flickr");
                });

            modelBuilder.Entity("LaunchData.Models.LaunchModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("AutoUpdate")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "auto_update");

                    b.PrimitiveCollection<string>("Capsules")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "capsules");

                    b.Property<string>("DateLocal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "date_local");

                    b.Property<string>("DatePrecision")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "date_precision");

                    b.Property<long>("DateUnix")
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "date_unix");

                    b.Property<DateTime>("DateUtc")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "date_utc");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "details");

                    b.Property<int>("FairingsId")
                        .HasColumnType("int");

                    b.Property<int>("FlightNumber")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "flight_number");

                    b.Property<string>("LaunchLibraryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "launch_library_id");

                    b.Property<string>("Launchpad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "launchpad");

                    b.Property<int>("LinksId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<bool>("Net")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "net");

                    b.PrimitiveCollection<string>("PayloadIds")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "payloads");

                    b.Property<string>("Rocket")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "rocket");

                    b.PrimitiveCollection<string>("Ships")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ships");

                    b.Property<long?>("StaticFireDateUnix")
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "static_fire_date_unix");

                    b.Property<DateTime?>("StaticFireDateUtc")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "static_fire_date_utc");

                    b.Property<bool?>("Success")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "success");

                    b.Property<bool>("Tbd")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "tbd");

                    b.Property<bool>("Upcoming")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "upcoming");

                    b.Property<int?>("Window")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "window");

                    b.HasKey("Id");

                    b.HasIndex("FairingsId");

                    b.HasIndex("LinksId");

                    b.ToTable("LaunchModels");
                });

            modelBuilder.Entity("LaunchData.Models.LaunchPad", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Launchpads");
                });

            modelBuilder.Entity("LaunchData.Models.Links", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Article")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "article");

                    b.Property<int>("FlickrId")
                        .HasColumnType("int");

                    b.Property<int>("PatchId")
                        .HasColumnType("int");

                    b.Property<string>("Presskit")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "presskit");

                    b.Property<int>("RedditId")
                        .HasColumnType("int");

                    b.Property<string>("Webcast")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "webcast");

                    b.Property<string>("Wikipedia")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "wikipedia");

                    b.Property<string>("YoutubeId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "youtube_id");

                    b.HasKey("Id");

                    b.HasIndex("FlickrId");

                    b.HasIndex("PatchId");

                    b.HasIndex("RedditId");

                    b.ToTable("Links");

                    b.HasAnnotation("Relational:JsonPropertyName", "links");
                });

            modelBuilder.Entity("LaunchData.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "region");

                    b.HasKey("Id");

                    b.ToTable("Location");

                    b.HasAnnotation("Relational:JsonPropertyName", "location");
                });

            modelBuilder.Entity("LaunchData.Models.Patch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Large")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "large");

                    b.Property<string>("Small")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "small");

                    b.HasKey("Id");

                    b.ToTable("Patches");

                    b.HasAnnotation("Relational:JsonPropertyName", "patch");
                });

            modelBuilder.Entity("LaunchData.Models.Payload", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<double?>("MassKg")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "mass_kg");

                    b.Property<string>("Orbit")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "orbit");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "type");

                    b.HasKey("Id");

                    b.ToTable("Payloads");
                });

            modelBuilder.Entity("LaunchData.Models.Reddit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Campaign")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "campaign");

                    b.Property<string>("Launch")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "launch");

                    b.Property<string>("Media")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "media");

                    b.Property<string>("Recovery")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "recovery");

                    b.HasKey("Id");

                    b.ToTable("Reddits");

                    b.HasAnnotation("Relational:JsonPropertyName", "reddit");
                });

            modelBuilder.Entity("LaunchData.Models.Rocket", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "type");

                    b.HasKey("Id");

                    b.ToTable("Rockets");
                });

            modelBuilder.Entity("LaunchData.Models.Core", b =>
                {
                    b.HasOne("LaunchData.Models.LaunchModel", null)
                        .WithMany("Cores")
                        .HasForeignKey("LaunchModelId");
                });

            modelBuilder.Entity("LaunchData.Models.CrewMember", b =>
                {
                    b.HasOne("LaunchData.Models.LaunchModel", null)
                        .WithMany("Crew")
                        .HasForeignKey("LaunchModelId");
                });

            modelBuilder.Entity("LaunchData.Models.Failure", b =>
                {
                    b.HasOne("LaunchData.Models.LaunchModel", null)
                        .WithMany("Failures")
                        .HasForeignKey("LaunchModelId");
                });

            modelBuilder.Entity("LaunchData.Models.LaunchModel", b =>
                {
                    b.HasOne("LaunchData.Models.Fairings", "Fairings")
                        .WithMany()
                        .HasForeignKey("FairingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaunchData.Models.Links", "Links")
                        .WithMany()
                        .HasForeignKey("LinksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fairings");

                    b.Navigation("Links");
                });

            modelBuilder.Entity("LaunchData.Models.LaunchPad", b =>
                {
                    b.HasOne("LaunchData.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("LaunchData.Models.Links", b =>
                {
                    b.HasOne("LaunchData.Models.Flickr", "Flickr")
                        .WithMany()
                        .HasForeignKey("FlickrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaunchData.Models.Patch", "Patch")
                        .WithMany()
                        .HasForeignKey("PatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaunchData.Models.Reddit", "Reddit")
                        .WithMany()
                        .HasForeignKey("RedditId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flickr");

                    b.Navigation("Patch");

                    b.Navigation("Reddit");
                });

            modelBuilder.Entity("LaunchData.Models.LaunchModel", b =>
                {
                    b.Navigation("Cores");

                    b.Navigation("Crew");

                    b.Navigation("Failures");
                });
#pragma warning restore 612, 618
        }
    }
}
